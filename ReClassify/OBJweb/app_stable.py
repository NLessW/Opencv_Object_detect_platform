import argparse
import time
from flask import Flask, render_template, Response, jsonify

from camera import camera

app = Flask(__name__)
cam_port = None

@app.route('/')
def index():
    return render_template('index.html')

def gen(camera):
    while True:
        frame = camera.get_frame()
        yield (b'--frame\r\n'
               b'Content-Type: image/jpeg\r\n\r\n' + frame + b'\r\n\r\n')

@app.route('/video_feed')
def video_feed():
    video_stream = camera.VideoCamera(cam_port, mIP="127.0.0.1", mPort=args.mp, token=args.token)
    return Response(gen(video_stream),
                    mimetype='multipart/x-mixed-replace; boundary=frame')

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="Docker container parameter")
    parser.add_argument("--wp", type=int, help="It is port number that websocket will be deployed at")
    parser.add_argument("--cp", type=int, help="It is port number that opencv will listen at")
    parser.add_argument("--mp", type=int, help="mqtt port")
    parser.add_argument("--token", type=str, help="application token generated by the dashboard")
    args = parser.parse_args()
    cam_port = args.cp
    app.run(host='0.0.0.0', debug=True, port=args.wp)